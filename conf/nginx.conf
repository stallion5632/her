
# worker_processes  auto;
worker_processes  1;
master_process off;
daemon off;

error_log  logs/error.log  error;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;



events {
    worker_connections  1024;
}


stream {

    lua_package_path '/home/test/openresty/her/src/?.lua;/home/test/openresty/her/src/lib/?.lua;/home/test/openresty/her/src/lib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?.lua;;';

    server {
        listen 1234;

        content_by_lua_block {
            require('src.chat').go()
        }
    }
}


http {

    include       mime.types;
    #default_type  application/octet-stream;

    lua_package_path '/home/test/openresty/her/src/?.lua;/home/test/openresty/her/src/lib/?.lua;/home/test/openresty/her/src/lib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?.lua;;';

    #keepalive_timeout  65;
    lua_code_cache on;


    server {

        listen       8000;
        server_name  localhost;
        charset utf-8;


        location /{

            content_by_lua_file  ./src/lua/dispatch.lua;
        
        }

        ############ websocket chatroom ##############
        location ~ /s/(.*) {

            content_by_lua_file src/wschat/ws.lua;
        }
        #模拟登录，随机生成用户
        location = /login {
            content_by_lua_file src/wschat/login.lua;    
        } 

       
    }
}
